// <auto-generated />
using System;
using BioAlga.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BioAlga.Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250819004421_AddClientesTable")]
    partial class AddClientesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BioAlga.Backend.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Normal");

                    b.HasKey("IdCliente");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("BioAlga.Backend.Models.Empleado", b =>
                {
                    b.Property<int>("Id_Empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_empleado");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Empleado"));

                    b.Property<string>("Apellido_Materno")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("Apellido_Paterno")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellido_paterno");

                    b.Property<string>("Correo")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("correo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id_Empleado");

                    b.ToTable("empleados");
                });

            modelBuilder.Entity("BioAlga.Backend.Models.Rol", b =>
                {
                    b.Property<int>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Rol"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre");

                    b.HasKey("Id_Rol");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("BioAlga.Backend.Models.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Usuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contrasena");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_registro");

                    b.Property<int?>("Id_Empleado")
                        .HasColumnType("int")
                        .HasColumnName("id_empleado");

                    b.Property<int>("Id_Rol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<string>("Nombre_Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_usuario");

                    b.Property<DateTime?>("Ultimo_Login")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ultimo_login");

                    b.HasKey("Id_Usuario");

                    b.HasIndex("Id_Empleado");

                    b.HasIndex("Id_Rol");

                    b.HasIndex("Nombre_Usuario")
                        .IsUnique();

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("BioAlga.Backend.Models.Usuario", b =>
                {
                    b.HasOne("BioAlga.Backend.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("Id_Empleado")
                        .HasConstraintName("fk_usuarios_empleados");

                    b.HasOne("BioAlga.Backend.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("Id_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usuarios_roles");

                    b.Navigation("Empleado");

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
